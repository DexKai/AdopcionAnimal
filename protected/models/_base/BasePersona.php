<?php

/**
 * This is the model base class for the table "persona".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Persona".
 *
 * Columns in table "persona" available as properties of the model,
 * followed by relations of table "persona" available as properties of the model.
 *
 * @property string $RUT
 * @property integer $iduser
 * @property integer $id_comuna
 * @property string $nombre
 * @property string $apellido_p
 * @property string $apellido_m
 * @property string $genero
 * @property string $direccion
 * @property integer $telefono
 *
 * @property Animal[] $animals
 * @property CrugeUser[] $crugeUsers
 * @property CrugeUser $iduser0
 * @property Comuna $idComuna
 */
abstract class BasePersona extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'persona';
    }

    public static function representingColumn() {
        return 'nombre';
    }

    public function rules() {
        return array(
            array('RUT, id_comuna, nombre, apellido_p, apellido_m, genero', 'required'),
            array('iduser, id_comuna, telefono', 'numerical', 'integerOnly'=>true),
            array('RUT', 'length', 'max'=>12),
            array('nombre, apellido_p, apellido_m', 'length', 'max'=>100),
            array('genero, direccion', 'length', 'max'=>1024),
            array('iduser, direccion, telefono', 'default', 'setOnEmpty' => true, 'value' => null),
            array('RUT, iduser, id_comuna, nombre, apellido_p, apellido_m, genero, direccion, telefono', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'animals' => array(self::HAS_MANY, 'Animal', 'RUT'),
            'crugeUsers' => array(self::HAS_MANY, 'CrugeUser', 'persona_rut'),
            'iduser0' => array(self::BELONGS_TO, 'CrugeUser', 'iduser'),
            'idComuna' => array(self::BELONGS_TO, 'Comuna', 'id_comuna'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'RUT' => Yii::t('app', 'Rut'),
                'iduser' => Yii::t('app', 'Iduser'),
                'id_comuna' => Yii::t('app', 'Id Comuna'),
                'nombre' => Yii::t('app', 'Nombre'),
                'apellido_p' => Yii::t('app', 'Apellido P'),
                'apellido_m' => Yii::t('app', 'Apellido M'),
                'genero' => Yii::t('app', 'Genero'),
                'direccion' => Yii::t('app', 'Direccion'),
                'telefono' => Yii::t('app', 'Telefono'),
                'animals' => null,
                'crugeUsers' => null,
                'iduser0' => null,
                'idComuna' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('RUT', $this->RUT, true);
        $criteria->compare('iduser', $this->iduser);
        $criteria->compare('id_comuna', $this->id_comuna);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('apellido_p', $this->apellido_p, true);
        $criteria->compare('apellido_m', $this->apellido_m, true);
        $criteria->compare('genero', $this->genero, true);
        $criteria->compare('direccion', $this->direccion, true);
        $criteria->compare('telefono', $this->telefono);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}